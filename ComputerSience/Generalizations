NAVIGATION
Generalizations
Congratulations! You've learned five commands commonly used to navigate the filesystem from the command line. What can we generalize so far?

The command line is a text interface for the computer's operating system. To access the command line, we use the terminal.
A filesystem organizes a computer's files and directories into a tree structure. It starts with the root directory. Each parent directory can contain more child directories and files.
From the command line, you can navigate through files and folders on your computer:
pwd outputs the name of the current working directory.
ls lists all files and directories in the working directory.
cd switches you into the directory you specify.
mkdir creates a new directory in the working directory.
touch creates a new file inside the working directory.

---------------------------------------------------------
BASIC GIT WORKFLOW
Generalizations
You have now been introduced to the fundamental Git workflow. You learned a lot! Let's take a moment to generalize:

Git is the industry-standard version control system for web developers
Use Git commands to help keep track of changes made to a project:
git init creates a new Git repository
git status inspects the contents of the working directory and staging area
git add adds files from the working directory to the staging area
git diff shows the difference between the working directory and the staging area
git commit permanently stores file changes from the staging area in the repository
git log shows a list of all previous commits

--------------------------------------------------

CONTROL FLOW
Review
Great job! We covered a ton of material in this lesson and you've increased the number of tools in your Python toolkit by several fold. Let's review what you've learned this lesson:

Boolean expressions are statements that can be either True or False
A boolean variable is a variable that is set to either True or False.
You can create boolean expressions using relational operators:
Equals: ==
Not equals: !=
Greater than: >
Greater than or equal to: >=
Less than: <
Less than or equal to: <=
if statements can be used to create control flow in your code.
else statements can be used to execute code when the conditions of an if statement are not met.
elif statements can be used to build additional checks into your if statements
try and except statements can be used to build error control into your code.
Let's put these skills to the test!

------------------------------------------------------

CREATING AND MODIFYING A LIST IN PYTHON
Review
So far, we have learned

How to create a list
How to create a list of lists using zip
How to add elements to a list using either .append() or +
How to use range to create lists of integers
Let's practice these skills.

---------------------------------------------------

WORKING WITH LISTS IN PYTHON
Review
In this lesson, we learned how to:

Get the length of a list //len(list)
Select subsets of a list (called slicing) //list[ : ]
Count the number of times that an element appears in a list //list.count('i')
Sort a list of items //list.sort() # sorted(list)

----------------------------------------------
LEARN PYTHON: LOOPS
Review
Good job! In this lesson, you learned

how to write a for loop
how to use range in a loop //list(range(2,9,3))
what infinite loops are and how to avoid them //break
how to skip values in a loop //continue
how to write a while loop 
how to make lists with one line
Let's get some more practice with these concepts!


+++++++++++++++++++++++++++++++++
List Comprehensions:
1.Takes an element in words
2.Assigns that element to a variable called word
3.Checks if word[0] == '@', and if so, it adds word to the new list, usernames. If not, nothing happens.
4.Repeats steps 1-3 for all of the strings in words
Note: if we hadnâ€™t done any checking (let's say we had omitted if word[0] == '@'), the new list would be just a copy of words

++++++++++++++++++++++++++++++++++++
More List Comprehensions:
1.Takes a string in usernames
2.Assigns that number to a variable called user
3.Adds " please follow me!" to user
4.Appends that concatenation to the new list called messages
5.Repeats steps 1-4 for all of the strings in usernames



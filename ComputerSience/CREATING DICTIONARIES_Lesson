#Review

songs = ["Like a Rolling Stone", "Satisfaction", "Imagine", "What's Going On", "Respect", "Good Vibrations"]
playcounts = [78, 29, 44, 21, 89, 5]

#1. Using a list comprehension, create a dictionary called plays that goes through zip(songs, playcounts) and creates a song:playcount pair for each song in songs and each playcount in playcounts.
plays = {
  song:playcount for song, playcount in zip(songs,playcounts)
}

print(plays)

#3. After printing plays, add a new entry to it. The entry should be for the song "Purple Haze" and the playcount is 1
plays["Purple Haze"] = 1

#4.This user has caught Aretha Franklin fever and listened to "Respect" 5 more times. Update the value for "Respect" to be 94 in the plays dictionary.
plays["Respect"] = 94

#5. Create a dictionary called library that has two key: value pairs: key "The Best Songs" with a value of plays, the dictionary you created, key "Sunday Feelings" with a value of an empty dictionary
library = {"The Best Songs": plays, "Sunday Feelings" : {}}
print(library)

--------------------------------------
#List Comprehensions to Dictionaries

drinks = ["espresso", "chai", "decaf", "drip"]
caffeine = [64, 40, 0, 120]
zipped_drinks = zip(drinks, caffeine)
drinks_to_caffeine = {key: value for key, value in zipped_drinks}

------------------------------------
#Overwrite Values

oscar_winners = {"Best Picture": "La La Land", "Best Actor": "Casey Affleck", "Best Actress": "Emma Stone", "Animated Feature": "Zootopia"}
oscar_winners["Supporting Actress"] = "Viola Davis"
oscar_winners["Best Picture"] = "Moonlight"

--------------------------------
#Add Multiple Keys

user_ids = {"teraCoder": 9018293, "proProgrammer": 119238}
user_ids.update({"theLooper": 138475, "stringQueen": 85739})
print(user_ids)

-----------------------------
#Add A Key

animals_in_zoo = {}
animals_in_zoo["zebras"] = 8
animals_in_zoo["monkeys"] = 12
animals_in_zoo["dinosaurs"] = 0
print(animals_in_zoo)

----------------------------------
#Invalid Keys

powers = {[1, 2, 4, 8, 16]: 2, [1, 3, 9, 27, 81]: 3}

#TypeError: unhashable type: 'list'
#The word "unhashable" in this context means that this 'list' is an object 
#that can be changed. Dictionaries in Python rely on each key having a hash value, 
#a specific identifier for the key. If the key can change, 
#that hash value would not be reliable. So the keys must always be unchangeable, 
#hashable data types, like numbers or strings.
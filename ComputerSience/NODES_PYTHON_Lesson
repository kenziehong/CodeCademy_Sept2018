
#Python Nodes Review

class Node:
  def __init__(self, value, link_node=None):
    self.value = value
    self.link_node = link_node
    
  def set_link_node(self, link_node):
    self.link_node = link_node
    
  def get_link_node(self):
    return self.link_node
  
  def get_value(self):
    return self.value

# Add your code below:
#1. Outside of Node, instantiate three nodes. None have an argument for link_node: 
#the first has a value of "likes to yak" and be assigned to a variable yacko
yacko = Node("likes to yak")
wacko = Node("has a penchant for hoarding snacks")
dot = Node("enjoys spending time in movie lots")

#2.Now let's give these nodes some responsibilities! yacko can keep track of dot and dot can keep up with wacko. wacko can't keep track of anything though. yacko a link_node of dot. dot a link_node of wacko
yacko.set_link_node(dot)
dot.set_link_node(wacko)

#3. Create two new variables, dots_data, and wackos_data. Use both getter methods to get dot's value from yacko and get wacko's value from dot. Print dots_data and wackos_data to the console to see the results!
#When your code is passing, take a moment to consider:
#How would you get yacko's value?
#How could you get from yacko to wacko's value?
#How do you think nodes could be helpful for keeping track of and storing information?
dots_data = yacko.get_link_node().get_value()
wackos_data = dot.get_link_node().get_value()
print(dots_data)
print(wackos_data)


---------------------------------------------------------
#Nodes Python Setter

class Node:
  def __init__(self, value, link_node=None):
    self.value = value
    self.link_node = link_node
    
  def get_value(self):
    return self.value
  
  def get_link_node(self):
    return self.link_node
  
  # Define your set_link_node method below:
  # We are only allowing the value of the node to be set upon creation. However, we want to allow updating the link of the node. For this, we will use a setter to modify the self.link_node attribute.
  def set_link_node(self, link_node):
    self.link_node = link_node
  
------------------------------------------------
#Nodes Python Getters

class Node:
  def __init__(self, value, link_node=None):
    self.value = value
    self.link_node = link_node
    
  # Define your get_value and get_link_node methods below:
  
  #1.Implement the get_value getter in the Node class.
  #We need methods to access the data and link within the node. For this, we will use two getters, get_value and get_link_node.
  #These should each return their corresponding value on the self object.
  def get_value(self):
    return self.value
  def get_link_node(self):
    return self.link_node

-------------------------------------------
#Nodes Python Introduction

# Create the Node class below:

#1.Begin by creating a new class, Node. Add an __init__ method in the Node class that takes a value and an optional link_node (default should be None). These should be saved to the corresponding self properties (self.value and self.link_node).
class Node:
  def __init__(self, value, link_node = None):
    self.value = value
    self.link_node = link_node      